library(AnnotationHub)#Annotationhub is used to query the database in ensemble
library(ensembldb)#To use the function genes(),which can retrieve the queried annotation data from ensemble  
# FUNCTION
CalcMTPercent <- function(object, species, resources, gtf, seqname){
  if (resources == 'Ensemble'){
    ah <- AnnotationHub()
    ahq <- query(ah,pattern = c(species, "EnsDb"), ignore.case = TRUE)#query by using provided info for species
    ahq %>% 
      mcols() #access the metadata columns. This will show all the databases that fit the provided patterns
    id <- ahq %>% #For each database, there will be an id assigned
      mcols() %>%
      rownames() %>% 
      tail(n = 1) #The latest updated database will at the end 
    edb <- ah[[id]] #Get the database by providing the index id
    annotations <- genes(edb, 
                         return.type = "data.frame")#This function will transform the ensemble object to a dataframe
    annotations <- annotations %>%
      dplyr::select(gene_id, gene_name, seq_name)#Pull out the columns that are needed
    mt <- annotations %>%
      dplyr::filter(seq_name == "MT") %>% #The mitochondria genes will have their seq_name as 'MT'
      dplyr::pull(gene_name) #Grab the gene_name for the gene with 'MT' as seq_name
    mt1 <- annotations %>%
      dplyr::filter(seq_name == "MT") %>%
      dplyr::pull(gene_id) #There are some mt genes without gene_name,instead, the gene_id will be used and presented in the metadata.
    mt <- c(mt, mt1) #Combine the gene_name and gene_id for all mt genes
  } else if (resources == 'Refseq') { #The case that the reference gene are from 'Refseq' instead of 'Ensemble'
      gtf <- as.data.frame(gtf) #Refseq does not develop package to process their genome database, so .gtf file has to be manually downloaded from NCBI
      mt <- gtf %>% #After converting the .gtf file to a data frame, it is able to pull out the mt gene by provided seqname
        dplyr::filter(seqnames == seqname) %>% #The seqnames can also be found in NCBI website, the Refseq will assign an unique seqname for mt genes
        dplyr::pull(gene_id)
      mt1 <- gtf %>%
        dplyr::filter(seqnames == seqname) %>%
        dplyr::pull(gene)
      mt <- c(mt,mt1)
      mt <- gsub('_','-',mt) #the underscore will be automatically transformed to "-" in Seurat, so this conversion is done here
  } 
  object@meta.data$mtUMI <- Matrix::colSums(object[which(rownames(object) %in% mt),], na.rm = T) #This is to calculate the UMI count for mt gene in each cell and add them to the metadata
  object@meta.data$mitoPercent <- object@meta.data$mtUMI*100/object@meta.data$nCount_RNA #By dividing the total UMI count by mt UMI count, we can get mt percentage, which also can be added to the metadata of the SeuratObject
  object <- object #update the changed SeuratObject
}
